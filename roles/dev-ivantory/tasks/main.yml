---
# tasks file for dev-ivansible

- import_role:
    name: ivansible.dev-user
  vars:
    dev_user_install_keys: true
    dev_user_setup_system: true
  tags: divan_prepare_user


- name: checkout inventory and playbooks
  git:
    dest: "{{ divan_dir }}"
    repo: "{{ divan_repo }}"
    version: "{{ divan_branch }}"
    update: no  # only clone, don't choke on pending modifications
    accept_hostkey: yes


- name: decrypt repository
  import_tasks: transcrypt.yml
  when: "divan_password != ''"
  tags: divan_decrypt


- name: install system packages
  apt:
    name: "{{ divan_system_packages }}"
  become: true

- name: setup virtual environment
  pip:
    requirements: "{{ divan_dir }}/requirements.txt"
    virtualenv: "{{ divan_dir }}/.venv"
    virtualenv_python: "{{ divan_python }}"


- name: install galaxy roles
  command: >
    "{{ divan_dir }}/.venv/bin/ansible-galaxy"
        install
        -r "{{ divan_dir }}/{{ divan_roles_list_file }}"
        -p "{{ divan_dir }}/{{ divan_roles_subdir }}"
        -f
  args:
    chdir: "{{ divan_dir }}"
    creates: "{{ divan_dir }}/{{ divan_roles_subdir }}/{{ divan_roles_check_role }}"
  when: "divan_roles_list_file != ''
         and divan_roles_check_role != ''"
  tags: divan_galaxy

- name: check that non-empty galaxy_login file exists
  stat:
    path: ~/.ansible_galaxy
  register: dot_ansible_galaxy
  tags: divan_galaxy

- name: perform galaxy login using github token
  command: >
    "{{ divan_dir }}/.venv/bin/ansible-galaxy"
        login
        --github-token "{{ divan_github_token }}"
  when: "divan_github_token != ''
         and (dot_ansible_galaxy.stat.exists == false
              or dot_ansible_galaxy.stat.size == 0)"
  tags: divan_galaxy


- name: template of insecure developer login to vagrant boxes
  # See: http://hakunin.com/six-ansible-practices
  blockinfile:
    dest: .ssh/config
    create: yes
    mode: 0600
    block: |
      Host vagrant-box
        Hostname vagrant-box.dev
        Port {{ ansible_port }}
      {# Never complain about ever-changing host keys #}
        StrictHostKeyChecking no
      {# Never try to remember those keys via known_hosts #}
        UserKnownHostsFile /dev/null
      {# Never report about making such awful things #}
        LogLevel ERROR
    marker: '# {mark} vagrant box example'
  tags: divan_ssh_config
...
