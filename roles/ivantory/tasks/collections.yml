---
- name: read list of required collections and roles
  slurp:
    src: "{{ divan_collections_file }}"
  register: _divan_collections_file

- name: parse the requirements file
  set_fact:
    _divan_requirements: "{{ _divan_collections_file.content |b64decode |from_yaml }}"
  when: not ansible_check_mode

- name: configure galaxy token
  copy:
    dest: "{{ ansible_user_dir }}/.ansible/galaxy_token"
    content: "token: {{ divan_galaxy_token }}\n"
    force: true
    mode: 0600
  when:
    - divan_galaxy_token |d('')

- name: create standalone directory for collections
  file:
    state: directory
    path: "{{ divan_collections_dir }}"
    mode: 0755

- name: create symbolic link for collections in ivantory
  file:
    state: link
    src: "{{ collections_relink }}"
    dest: "{{ collections_subdir }}"
  vars:
    collections_subdir: "{{ divan_dir }}/collections/ansible_collections"
    collections_parent: "{{ collections_subdir |dirname }}"
    collections_relink: "{{ divan_collections_dir |relpath(collections_parent) }}"
  tags: divan_links

- name: create standalone directory for required roles
  file:
    state: directory
    path: "{{ divan_roles_dir }}"
    mode: 0755

- name: create symbolic link for required roles in ivantory
  file:
    state: link
    src: "{{ roles_relink }}"
    dest: "{{ roles_subdir }}"
  vars:
    roles_subdir: "{{ divan_dir }}/roles"
    roles_parent: "{{ roles_subdir |dirname }}"
    roles_relink: "{{ divan_roles_dir |relpath(roles_parent) }}"
  tags: divan_links

- name: install required collections from git
  git:
    dest: "{{ divan_collections_dir }}/{{ item.name |replace('.','/') }}"
    repo: "{{ item.source }}"
    version: "{{ item.version |d(divan_default_git_branch) }}"
    update: false
    accept_hostkey: true
  when:
    - item.type == 'git' or item.source is match('^git@')
  loop: "{{ _divan_requirements.collections |d([]) }}"
  loop_control:
    label: "{{ item.name }}"

- name: install required roles from git
  git:
    dest: "{{ divan_roles_dir }}/{{ item.name |replace('.','/') }}"
    repo: "{{ item.source }}"
    version: "{{ item.version |d(divan_default_git_branch) }}"
    update: false
    accept_hostkey: true
  when:
    - item.type == 'git' or item.source is match('^git@')
  loop: "{{ _divan_requirements.roles |d([]) }}"
  loop_control:
    label: "{{ item.name }}"
...
