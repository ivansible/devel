---
- name: read list of required collections and roles
  ansible.builtin.slurp:
    src: "{{ divan_collections_file }}"
  register: _divan_collections_file

- name: parse the requirements file
  ansible.builtin.set_fact:
    _divan_requirements: "{{ _divan_collections_file.content |b64decode |from_yaml }}"

- name: configure galaxy token
  ansible.builtin.copy:
    dest: "{{ ansible_user_dir }}/.ansible/galaxy_token"
    content: "token: {{ divan_galaxy_token }}\n"
    force: true
    mode: 0600
  when:
    - divan_galaxy_token |d('')

- name: create standalone directory for collections
  ansible.builtin.file:
    state: directory
    path: "{{ divan_collections_dir }}"
    mode: 0755

- name: create symbolic link for collections in ivantory
  ansible.builtin.file:
    state: link
    src: "{{ collections_relink }}"
    dest: "{{ collections_subdir }}"
  vars:
    collections_subdir: "{{ divan_dir }}/collections/ansible_collections"
    collections_parent: "{{ collections_subdir |dirname }}"
    collections_relink: "{{ divan_collections_dir |relpath(collections_parent) }}"
  tags: divan_links

- name: create standalone directory for required roles
  ansible.builtin.file:
    state: directory
    path: "{{ divan_roles_dir }}"
    mode: 0755

- name: create symbolic link for required roles in ivantory
  ansible.builtin.file:
    state: link
    src: "{{ roles_relink }}"
    dest: "{{ roles_subdir }}"
  vars:
    roles_subdir: "{{ divan_dir }}/roles"
    roles_parent: "{{ roles_subdir |dirname }}"
    roles_relink: "{{ divan_roles_dir |relpath(roles_parent) }}"
  tags: divan_links

- name: install required collections from git
  ansible.builtin.include_tasks: _install_requirement.yml
  args:
    apply:
      tags:
        - divan_collections
        - divan_all
  vars:
    parent: "{{ divan_collections_dir }}"
  loop: "{{ _divan_requirements.collections |d([]) }}"
  loop_control:
    label: "{{ item.name |d(item.source) |d(item) }}"

- name: install required roles from git
  ansible.builtin.include_tasks: _install_requirement.yml
  args:
    apply:
      tags:
        - divan_collections
        - divan_all
  vars:
    parent: "{{ divan_roles_dir }}"
  loop: "{{ _divan_requirements.roles |d([]) }}"
  loop_control:
    label: "{{ item.name |d(item.source) |d(item) }}"
...
