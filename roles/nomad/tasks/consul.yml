---
- name: add consul group
  ansible.builtin.group:
    name: "{{ consul_group }}"

- name: add consul user
  ansible.builtin.user:
    name: "{{ consul_user }}"
    group: "{{ consul_group }}"
    system: true

- name: install consul binary
  ansible.builtin.unarchive:
    remote_src: true
    src: https://releases.hashicorp.com/consul/{{ consul_version }}/consul_{{ consul_version }}_linux_{{ lin_apt_arch }}.zip
    dest: "{{ consul_binary | dirname }}"
    creates: "{{ consul_upgrade |bool |ternary(omit, consul_binary) }}"
    owner: root
    group: "{{ consul_group }}"
    mode: 0755
  notify: restart consul service

- name: create consul directories
  ansible.builtin.file:
    state: directory
    path: "{{ item.path }}"
    owner: "{{ consul_user }}"
    group: "{{ consul_group }}"
    mode: "{{ item.mode }}"
  loop:
    - path: "{{ consul_etc_dir }}"
      mode: '0700'
    - path: "{{ consul_data_dir }}"
      mode: '0700'
    - path: "{{ consul_run_dir }}"
      mode: '0755'
  loop_control:
    label: "{{ item.path }}"

- name: generate consul encryption key
  block:
    - name: run consul keygen
      # noqa no-changed-when
      ansible.builtin.command: "{{ consul_binary }} keygen"
      register: _consul_keygen_result

    - name: set fact with consul encryption key
      ansible.builtin.set_fact:
        consul_encrypt_key: "{{ _consul_keygen_result.stdout_lines.0 }}"
  when:
    - consul_encrypt_enable |bool
    - not consul_encrypt_key |default('')

- name: configure consul
  ansible.builtin.template:
    src: consul/consul.hcl
    dest: "{{ consul_config_file }}"
    owner: "{{ consul_user }}"
    group: "{{ consul_group }}"
    mode: 0640
  notify: restart consul service

- name: create consul service
  ansible.builtin.template:
    src: consul/consul.service
    dest: /etc/systemd/system/consul.service
    mode: 0644
  register: _consul_service_result
  notify: restart consul service

- name: enable consul service
  ansible.builtin.systemd:
    name: consul
    state: started
    enabled: true
    daemon_reload: "{{ _consul_service_result is changed }}"

- name: open consul ports in ferm
  ivansible.base.ferm_port:
    port:
      ## https://www.consul.io/docs/install/ports
      - "{{ consul_port_server }}/tcp"
      - "{{ consul_port_serf_lan }}"
      - "{{ consul_port_serf_wan }}"
      - "{{ consul_port_http }}/tcp"
      - "{{ consul_port_dns }}"
    zone: internal
    comment: consul
  when: lin_firewall == 'ferm'
  tags:
    - skip_ansible_lint
    - dev_consul_firewall

- name: consul logging
  block:
    - name: create consul log directory
      ansible.builtin.file:
        state: directory
        path: "{{ consul_log_file |dirname }}"
        owner: syslog
        group: "{{ consul_group }}"
        mode: 0775

    - name: ensure consul log file exists
      ansible.builtin.copy:
        dest: "{{ consul_log_file }}"
        content: ""
        force: false
        owner: syslog
        group: "{{ consul_group }}"
        mode: 0664
      notify: restart syslog service

    - name: configure syslog for consul
      ansible.builtin.copy:
        dest: /etc/rsyslog.d/34-consul.conf
        content: |
          :programname,isequal,"consul" {{ consul_log_file }}
          & stop
        force: true
        mode: 0644
      notify: restart syslog service

    - name: rotate consul log file
      ansible.builtin.copy:
        dest: /etc/logrotate.d/consul
        content: |
          {{ consul_log_file }} {
              weekly
              maxsize {{ consul_log_max_size }}
              missingok
              rotate 4
              notifempty
              {{ commentout }}compress
              {{ commentout }}delaycompress
              sharedscripts
              postrotate
                  invoke-rc.d rsyslog rotate > /dev/null 2> /dev/null
              endscript
          }
        force: true
        mode: 0644
      vars:
        commentout: "{{ '' if lin_compress_logs |bool or lin_compress_logs is none else '#' }}"

  when: lin_use_rsyslog |bool
  tags: dev_consul_syslog
...
