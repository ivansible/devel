---
- name: ensure user shell is bash
  user:
    name: "{{ ansible_user_id }}"
    shell: /bin/bash
  become: true

- name: place for custom bash settings
  file:
    path: ~/.local/bashrc
    state: directory
    mode: 0755

- name: source local settings from bashrc
  lineinfile:
    path: ~/.bashrc
    line: "for bashlet in $(ls -1 ~/.local/bashrc/*.sh); do . $bashlet; done  # ansible-managed"
    regexp: "~/[.]local/bashrc/|[.]bashrc[.]local\\b"

- name: perform cleanup on bash logout
  blockinfile:
    path: ~/.bash_logout
    block: "{{ lookup('file', 'bashrc/logout.sh') }}"
    create: true
    mode: 0644

- name: surgically implant interactive login block in bashrc
  block:
    - name: implant marker one of interactive block in bashrc
      lineinfile:
        path: ~/.bashrc
        line: "# == BEGIN {{ marker }} =="
        insertafter: "{{ point_one }}"
        firstmatch: true
        validate: grep -Eq "{{ point_one }}" %s

    - name: implant marker two of interactive block in bashrc
      lineinfile:
        path: ~/.bashrc
        line: "# == END {{ marker }} =="
        insertbefore: "{{ point_two }}"
        firstmatch: true
        validate: grep -Eq "{{ point_two }}" %s

    - name: implant interactive login block in bashrc
      blockinfile:
        path: ~/.bashrc
        block: |+
          case "$_SSH_,$-" in
              i,*) shopt -s expand_aliases;;
              *i*) ;;
                *) return;;
          esac

        marker: "# == {mark} {{ marker }} =="
  rescue:
    - name: revert interactive block markers from bashrc
      lineinfile:
        path: ~/.bashrc
        regexp: "^# == (BEGIN|END) {{ marker }} =="
        state: absent
      register: _bashrc_remove_interactive_markers
      until: _bashrc_remove_interactive_markers is not changed

    - name: failed to find place for interactive block in bashrc
      fail:
        msg: failed to find place for interactive block in bashrc
  vars:
    point_one: "^# If not running interactively"
    point_two: "^# don't put duplicate lines"
    marker: "detect interactive login"
  when: dev_user_ssh_interactive |bool
  tags: dev_user_ssh_interactive

- name: bashrc environment variables (user)
  blockinfile:
    path: ~/.local/bashrc/1env.sh
    block: |
      {% for var in dev_user_all_vars |sort %}
      export {{ var }}="{{ dev_user_all_vars[var] }}"
      {% endfor %}
    ## "dummy quote to fix vim highliter
    insertbefore: BOF
    marker: "# == {mark} USER VARIABLES =="
    create: true
    mode: 0644
  when: not is_molecule_test |bool

- name: bashrc environment variables (common)
  blockinfile:
    path: ~/.local/bashrc/1env.sh
    block: |
      export BROWSER="firefox"
      export EDITOR="vim"
      export VISUAL="vim"
      export PAGER="less"
      export LESS="-F -X -R"
      #export AWS_DEFAULT_REGION=""
    insertbefore: BOF
    create: true
    mode: 0644

- name: bashrc secrets (if permitted)
  blockinfile:
    path: ~/.local/bashrc/6secret.sh
    block: |
      {% if is_permitted |bool %}
      {%   for var in dev_user_all_secrets |sort %}
      export {{ var }}="{{ dev_user_all_secrets[var] }}"
      {%   endfor %}
      {% endif %}
    ## "dummy quote to fix vim highliter
    insertbefore: BOF
    create: true
    mode: 0600
  when: not is_molecule_test |bool

- name: bashrc extra paths
  blockinfile:
    path: ~/.local/bashrc/2path.sh
    block: |
      if [ -n "${PATH##*{{ user_bin }}}" ] && [ -n "${PATH##*{{ user_bin }}:*}" ]; then
          export PATH={{ user_bin }}:$PATH
      fi
    insertbefore: BOF
    marker: "# == {mark} EXTRA USER PATHS =="
    create: true
    mode: 0644
  vars:
    user_bin: "{{ ansible_user_dir }}/bin"

- name: bashrc local snippets
  blockinfile:
    path: ~/.local/bashrc/3common.sh
    block: "{{ lookup('file', 'bashrc/common.sh') }}"
    insertbefore: BOF
    create: true
    mode: 0644

- name: bashrc setup ssh-agent
  blockinfile:
    path: ~/.local/bashrc/3common.sh
    block: "{{ lookup('file', 'bashrc/ssh-agent.sh') }}"
    marker: "# == {mark} SETUP SSH-AGENT =="
    insertafter: EOF
    create: true
    mode: 0644

- name: bashrc aliases for user
  blockinfile:
    path: ~/.local/bashrc/4alias.sh
    block: "{{ lookup('file', 'bashrc/alias.sh') }}"
    insertbefore: BOF
    create: true
    mode: 0644

- name: bashrc aliases for root
  become: true
  blockinfile:
    path: /root/.bashrc
    block: "{{ lookup('file', 'bashrc/alias.sh') }}"
    marker: "# == {mark} ANSIBLE ALIASES =="
    insertbefore: BOF
    create: true
    mode: 0600
  when: ansible_user_id != 'root'

- name: bashrc place for completions
  lineinfile:
    path: ~/.local/bashrc/5completion.sh
    line: "# put your completions here"
    insertbefore: BOF
    create: true
    mode: 0644

- name: add git completions for alias 'g'
  lineinfile:
    path: ~/.local/bashrc/5completion.sh
    line: '__git_complete g __git_main 2>/dev/null'
    regexp: '^__git_complete g __git_main'

- name: bashrc place for user snippets
  lineinfile:
    path: ~/.local/bashrc/7user.sh
    line: "# put your snippets here"
    insertbefore: BOF
    create: true
    mode: 0600
...
